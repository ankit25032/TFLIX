{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS_Code\\\\RECAT\\\\NETFLIX\\\\src\\\\components\\\\smovie.jsx\",\n    _s = $RefreshSig$();\n\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\nimport { useRef } from \"react\";\nimport \"./movies.css\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Smovies = props => {\n  _s();\n\n  const card = useRef(null);\n  const [data, setData] = useState(null);\n  const [hover, setHover] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setData(1);\n    }, 2000);\n  });\n  card.forEach(card => {\n    card.addEventListener(\"mouseover\", e => {\n      let reachedTarget = false;\n\n      for (let i = 0; i < card.length; i++) {\n        // check if current tile is hovered\n        if (card[i] == e.currentTarget) {\n          reachedTarget = true;\n          continue;\n        } // if target has previous siblings, move them to the left\n\n\n        if (!reachedTarget) {\n          card[i].classList.add(\"shiftLeft\");\n        } // if target has next siblings, move them to the right\n\n\n        if (reachedTarget) {\n          card[i].classList.add(\"shiftRight\");\n        } // make other card darker\n\n\n        card[i].classList.add(\"darker\");\n      }\n    });\n    tile.addEventListener(\"mouseout\", () => {\n      // move all card back to initial position\n      for (let i = 0; i < card.length; i++) {\n        card[i].classList.remove(\"shiftLeft\");\n        card[i].classList.remove(\"shiftRight\");\n        card[i].classList.remove(\"darker\");\n      }\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [data && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      ref: card,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"img\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          loading: \"lazy\",\n          src: props.imgUrl,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), !data && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(SkeletonTheme, {\n        color: \"#202020\",\n        highlightColor: \"#2b2b2a\",\n        children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n          height: 256\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Smovies, \"zKSD5yqkMnFBo7VMZjxZcX62bNQ=\");\n\n_c = Smovies;\nexport default Smovies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Smovies\");","map":{"version":3,"sources":["D:/VS_Code/RECAT/NETFLIX/src/components/smovie.jsx"],"names":["Skeleton","SkeletonTheme","useRef","useState","useEffect","Smovies","props","card","data","setData","hover","setHover","setTimeout","forEach","addEventListener","e","reachedTarget","i","length","currentTarget","classList","add","tile","remove","imgUrl","title"],"mappings":"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","sourcesContent":["import Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\r\nimport { useRef } from \"react\";\r\nimport \"./movies.css\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst Smovies = (props) => {\r\n  const card = useRef(null);\r\n  const [data, setData] = useState(null);\r\n  const [hover, setHover] = useState(false);\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setData(1);\r\n    }, 2000);\r\n  });\r\n  card.forEach((card) => {\r\n    card.addEventListener(\"mouseover\", (e) => {\r\n      let reachedTarget = false;\r\n\r\n      for (let i = 0; i < card.length; i++) {\r\n        // check if current tile is hovered\r\n        if (card[i] == e.currentTarget) {\r\n          reachedTarget = true;\r\n          continue;\r\n        }\r\n        // if target has previous siblings, move them to the left\r\n        if (!reachedTarget) {\r\n          card[i].classList.add(\"shiftLeft\");\r\n        }\r\n        // if target has next siblings, move them to the right\r\n        if (reachedTarget) {\r\n          card[i].classList.add(\"shiftRight\");\r\n        }\r\n\r\n        // make other card darker\r\n        card[i].classList.add(\"darker\");\r\n      }\r\n    });\r\n\r\n    tile.addEventListener(\"mouseout\", () => {\r\n      // move all card back to initial position\r\n      for (let i = 0; i < card.length; i++) {\r\n        card[i].classList.remove(\"shiftLeft\");\r\n        card[i].classList.remove(\"shiftRight\");\r\n        card[i].classList.remove(\"darker\");\r\n      }\r\n    });\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {data && (\r\n        <div className=\"card\" ref={card}>\r\n          <div className=\"img\">\r\n            <img loading=\"lazy\" src={props.imgUrl} alt=\"\" />\r\n          </div>\r\n          <h2 className=\"title\">{props.title}</h2>\r\n        </div>\r\n      )}\r\n      {!data && (\r\n        <div className=\"card\">\r\n          <SkeletonTheme color=\"#202020\" highlightColor=\"#2b2b2a\">\r\n            <Skeleton height={256} />\r\n            <Skeleton />\r\n          </SkeletonTheme>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Smovies;\r\n"]},"metadata":{},"sourceType":"module"}