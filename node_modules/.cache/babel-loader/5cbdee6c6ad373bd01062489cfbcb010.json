{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS_Code\\\\RECAT\\\\NETFLIX\\\\src\\\\components\\\\Mvideo.jsx\";\nimport Video from \"./video\";\nimport { useParams } from \"react-router\";\nimport { useState } from \"react\";\nimport ReactPlayer from \"react-player/lazy\"; // Lazy load the YouTube player\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Mvideo = () => {\n  const width = window.innerWidth;\n\n  function call() {\n    if (width > 500) {\n      return /*#__PURE__*/_jsxDEV(Video, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [call(), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.link\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Mvideo;\nexport default Mvideo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mvideo\");","map":{"version":3,"sources":["D:/VS_Code/RECAT/NETFLIX/src/components/Mvideo.jsx"],"names":["Video","useParams","useState","ReactPlayer","Mvideo","width","window","innerWidth","call","props","link"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,mBAAxB,C,CAEA;;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,KAAK,GAAGC,MAAM,CAACC,UAArB;;AAEA,WAASC,IAAT,GAAgB;AACd,QAAIH,KAAK,GAAG,GAAZ,EAAiB;AACf,0BAAO,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF;;AAED,sBACE;AAAA,eACGG,IAAI,EADP,eAEE;AAAA,gBAAKC,KAAK,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD,CAfD;;KAAMN,M;AAiBN,eAAeA,MAAf","sourcesContent":["import Video from \"./video\";\r\nimport { useParams } from \"react-router\";\r\nimport { useState } from \"react\";\r\nimport ReactPlayer from \"react-player/lazy\";\r\n\r\n// Lazy load the YouTube player\r\n\r\nconst Mvideo = () => {\r\n  const width = window.innerWidth;\r\n\r\n  function call() {\r\n    if (width > 500) {\r\n      return <Video />;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {call()}\r\n      <h1>{props.link}</h1>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Mvideo;\r\n"]},"metadata":{},"sourceType":"module"}