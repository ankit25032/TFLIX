{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS_Code\\\\my-app\\\\src\\\\componenets\\\\counters.jsx\";\nimport React, { Component } from \"react\";\nimport Counter from \"./counter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counters extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counters: [{\n        id: 1,\n        value: 0\n      }, {\n        id: 2,\n        value: 0\n      }, {\n        id: 3,\n        value: 0\n      }, {\n        id: 4,\n        value: 0\n      }]\n    };\n\n    this.inc = idofc => {\n      console.log(\"hello\");\n      const counters = [...this.state.counters];\n      const index = counters.indexOf(idofc);\n      counters[index].value++;\n      this.setState({\n        counters\n      });\n    };\n\n    this.delete = counterId => {\n      const counters = this.state.counters.filter(c => c.id !== counterId);\n      this.setState({\n        counters\n      });\n    };\n\n    this.reset = () => {\n      const counters = this.state.counters.map(idx => counters.value = 0);\n      this.setState({\n        counters\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: this.reset,\n        children: \"RESET\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), this.state.counters.map(counter => /*#__PURE__*/_jsxDEV(Counter, {\n        id: counter.id,\n        value: counter.value,\n        inc: this.inc,\n        counter: counter,\n        ondelete: this.delete\n      }, counter.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Counters;","map":{"version":3,"sources":["D:/VS_Code/my-app/src/componenets/counters.jsx"],"names":["React","Component","Counter","Counters","state","counters","id","value","inc","idofc","console","log","index","indexOf","setState","delete","counterId","filter","c","reset","map","idx","render","counter"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AACA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BG,KAD+B,GACvB;AACNC,MAAAA,QAAQ,EAAE,CACR;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OADQ,EAER;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAFQ,EAGR;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAHQ,EAIR;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAJQ;AADJ,KADuB;;AAAA,SAS/BC,GAT+B,GASxBC,KAAD,IAAW;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,YAAMN,QAAQ,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,QAAf,CAAjB;AACA,YAAMO,KAAK,GAAGP,QAAQ,CAACQ,OAAT,CAAiBJ,KAAjB,CAAd;AACAJ,MAAAA,QAAQ,CAACO,KAAD,CAAR,CAAgBL,KAAhB;AACA,WAAKO,QAAL,CAAc;AAAET,QAAAA;AAAF,OAAd;AACD,KAf8B;;AAAA,SAgB/BU,MAhB+B,GAgBrBC,SAAD,IAAe;AACtB,YAAMX,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAAX,CAAoBY,MAApB,CAA4BC,CAAD,IAAOA,CAAC,CAACZ,EAAF,KAASU,SAA3C,CAAjB;AACA,WAAKF,QAAL,CAAc;AAAET,QAAAA;AAAF,OAAd;AACD,KAnB8B;;AAAA,SAoB/Bc,KApB+B,GAoBvB,MAAM;AACZ,YAAMd,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAAX,CAAoBe,GAApB,CAAyBC,GAAD,IAAUhB,QAAQ,CAACE,KAAT,GAAiB,CAAnD,CAAjB;AACA,WAAKO,QAAL,CAAc;AAAET,QAAAA;AAAF,OAAd;AACD,KAvB8B;AAAA;;AAyB/BiB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAmC,QAAA,OAAO,EAAE,KAAKH,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIG,KAAKf,KAAL,CAAWC,QAAX,CAAoBe,GAApB,CAAyBG,OAAD,iBACvB,QAAC,OAAD;AAEE,QAAA,EAAE,EAAEA,OAAO,CAACjB,EAFd;AAGE,QAAA,KAAK,EAAEiB,OAAO,CAAChB,KAHjB;AAIE,QAAA,GAAG,EAAE,KAAKC,GAJZ;AAKE,QAAA,OAAO,EAAEe,OALX;AAME,QAAA,QAAQ,EAAE,KAAKR;AANjB,SACOQ,OAAO,CAACjB,EADf;AAAA;AAAA;AAAA;AAAA,cADD,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AA3C8B;;AA8CjC,eAAeH,QAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Counter from \"./counter\";\r\nclass Counters extends Component {\r\n  state = {\r\n    counters: [\r\n      { id: 1, value: 0 },\r\n      { id: 2, value: 0 },\r\n      { id: 3, value: 0 },\r\n      { id: 4, value: 0 },\r\n    ],\r\n  };\r\n  inc = (idofc) => {\r\n    console.log(\"hello\");\r\n    const counters = [...this.state.counters];\r\n    const index = counters.indexOf(idofc);\r\n    counters[index].value++;\r\n    this.setState({ counters });\r\n  };\r\n  delete = (counterId) => {\r\n    const counters = this.state.counters.filter((c) => c.id !== counterId);\r\n    this.setState({ counters });\r\n  };\r\n  reset = () => {\r\n    const counters = this.state.counters.map((idx) => (counters.value = 0));\r\n    this.setState({ counters });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button className=\"btn btn-danger\" onClick={this.reset}>\r\n          RESET\r\n        </button>\r\n        {this.state.counters.map((counter) => (\r\n          <Counter\r\n            key={counter.id}\r\n            id={counter.id}\r\n            value={counter.value}\r\n            inc={this.inc}\r\n            counter={counter}\r\n            ondelete={this.delete}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counters;\r\n"]},"metadata":{},"sourceType":"module"}